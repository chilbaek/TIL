<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd"> 
	
	<!-- Security Custom Package Search -->
	<context:component-scan base-package="com.tproject.dao" />
	
	<http pattern="/favicon.ico" security="none" />
	
	<!-- Basic Login -->
	<http pattern="/svn/**">
		<intercept-url pattern='/svn/**' access="ROLE_ADMIN, ROLE_USER" />
		<http-basic />
	</http>
	
	<!-- Form Login -->
	<http auto-config="true" use-expressions="true">
		<!-- Security Customize -->
		<!-- Login pages -->
    	<form-login login-page="/login.do" authentication-failure-url="/loginerror.do"/>
    	<logout />
    	<!-- Security Zone(중복 롤(hasRole(ROLE1, ROLE2, ...)) 적용가능) -->
    	<!-- 인터셉터 기능을 이용해서 권한이 필요한 URL에 할당할 수 있다. -->
    	<intercept-url pattern="/repo/**" access="hasRole('ROLE_ADMIN')" />
	</http>
    
	<!-- Authentication manager -->
	<authentication-manager> 
		<authentication-provider user-service-ref="loginService">
			<password-encoder ref="passwordEncoder"></password-encoder>
		</authentication-provider>
	</authentication-manager> 
	
	<!-- Security Encrypt -->
	<beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" />
		
	<!-- Security Custom Service -->
	<beans:bean id="loginService" class="com.tproject.service.LoginServiceImpl"/>
	
	<!-- Security Custom DAO -->
	<beans:bean id="memberinfodao" class="com.tproject.dao.MemberInfoDAOImpl"/>
	
	<!-- Use Security MongoDB -->
    <mongo:db-factory 
    	id="mongoDbFactory" 
    	host="localhost"
    	port="27017"
    	dbname="memberdb"/> 
    
    <beans:bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
    	<beans:constructor-arg name="mongoDbFactory" ref="mongoDbFactory"/>   
    </beans:bean>
</beans:beans>